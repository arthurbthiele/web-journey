{"version":3,"sources":["logo.svg","Graph.js","App.js","reportWebVitals.js","index.js"],"names":["options","edges","arrows","to","Graph","graph","setSelectedWord","selectedWord","useState","setSelectedNodes","network","setNetwork","events","select","event","nodes","id","afterDrawing","getSelectedNodes","setSelection","selectedNodes","getNetwork","nw","App","label","className","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAAe,MAA0B,iC,yBCGnCA,EAAU,CACZC,MAAO,CACHC,OAAQ,CACJC,IAAI,KAKHC,EAAQ,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,gBAAiBC,EAAmB,EAAnBA,aAAmB,EACrBC,qBADqB,mBACzCC,GADyC,aAGjCD,qBAHiC,mBAGxDE,EAHwD,KAG/CC,EAH+C,KAQzDC,EAAS,CACXC,OAAQ,SAACC,GAAW,IAAD,EACfL,EAAiBK,EAAMC,OACvBT,GAAgB,UAAAQ,EAAMC,MAAM,UAAZ,eAAgBC,KAAMF,EAAMC,MAAM,KAEtDE,aAAc,WACNV,KAAY,OAAKG,QAAL,IAAKA,OAAL,EAAKA,EAASQ,mBAAmB,MACtC,OAAPR,QAAO,IAAPA,KAASS,aAAa,CAAEJ,MAAO,CAACR,QAI5C,OACI,8BACI,cAAC,IAAD,CACIF,MAAOA,EACPL,QAASA,EACTY,OAAQA,EACRQ,cAAe,CAACb,GAChBc,WAtBe,SAACC,GACxBX,EAAWW,S,OCiBJC,MA5Bf,WAAgB,IAAD,EACaf,mBAAS,CACjCO,MAAO,CAAC,CAAEC,GAAI,IAAKQ,MAAO,MAC1BvB,MAAO,KAHI,mBACNI,EADM,KAKb,OALa,KAMX,qBAAKoB,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,iCAGA,cAAC,EAAD,CACEvB,MAAOA,IAET,mBACEoB,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,+BCROC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f82d4c5e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import GraphVis from \"react-graph-vis\";\nimport React, { useState } from \"react\";\n\nconst options = {\n    edges: {\n        arrows: {\n            to: false,\n        },\n    },\n};\n\nexport const Graph = ({ graph, setSelectedWord, selectedWord }) => {\n    const [selectedNodes, setSelectedNodes] = useState();\n\n    const [network, setNetwork] = useState();\n    const setNetworkInstance = (nw) => {\n        setNetwork(nw);\n    };\n\n    const events = {\n        select: (event) => {\n            setSelectedNodes(event.nodes);\n            setSelectedWord(event.nodes[0]?.id || event.nodes[0]);\n        },\n        afterDrawing: () => {\n            if (selectedWord !== network?.getSelectedNodes()[0])\n                network?.setSelection({ nodes: [selectedWord] });\n        },\n    };\n\n    return (\n        <div>\n            <GraphVis\n                graph={graph}\n                options={options}\n                events={events}\n                selectedNodes={[selectedWord]}\n                getNetwork={setNetworkInstance}\n            />\n        </div>\n    );\n}","import logo from './logo.svg';\nimport React, { useState } from \"react\";\nimport { Graph } from \"./Graph\";\nimport './App.css';\n\nfunction App() {\n  const [graph, setGraph] = useState({\n    nodes: [{ id: \"a\", label: \"a\" }],\n    edges: [],\n  });\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and have edited to reload.\n        </p>\n        <Graph\n          graph={graph}\n        />\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}